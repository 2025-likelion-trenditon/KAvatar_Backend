# github repository actions 페이지에 나타날 이름
name: CI/CD using github actions & docker

# event trigger
on:
  push:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Docker build & push to prod
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build --platform linux/amd64 -t ${{ secrets.DOCKER_IMAGENAME }}:latest .
          docker push ${{ secrets.DOCKER_IMAGENAME }}:latest

      # deploy to production
      - name: Deploy to prod
        uses: appleboy/ssh-action@master
        id: deploy-prod
        with:
          host: ${{ secrets.ORACLE_INSTANCES_HOST }}
          username: ${{ secrets.ORACLE_SSH_USERNAME }}
          key: ${{ secrets.ORACLE_SSH_PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
           CONTAINER_ID=$(sudo docker ps -q --filter "ancestor=${{ secrets.DOCKER_IMAGENAME }}:latest")
           sudo docker stop $CONTAINER_ID
           sudo docker rm -f $CONTAINER_ID
           sudo docker pull ${{ secrets.DOCKER_IMAGENAME }}:latest
           sudo docker run -d \
              -p "${{ secrets.LOCAL_PORT }}:${{ secrets.DOCKER_PORT }}" \
              -e "DATABASE_URL=${{ secrets.DATABASE_URL }}" \
              -e "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" \
              -e "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" \
              -e "SPRING_PROFILES_ACTIVE=${{ secrets.PROFILES }}" \
              ${{ secrets.DOCKER_IMAGENAME }}:latest
           sudo docker image prune -f
